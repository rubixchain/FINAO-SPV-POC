definitions:
  model.AddPublicDataResponse:
    properties:
      message:
        type: string
      pub_data_id:
        type: integer
      status:
        type: boolean
    type: object
  model.BasicResponse:
    properties:
      did:
        type: string
      message:
        type: string
      status:
        type: boolean
      userID:
        type: integer
    type: object
  model.LogInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.LogInResponse:
    properties:
      message:
        type: string
      status:
        type: boolean
      userID:
        type: integer
    type: object
  model.PrivateData:
    properties:
      capsule:
        type: string
      cipher_text:
        type: string
      created_at:
        type: string
      pvt_data_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  model.PrivateDataInputReq:
    properties:
      communities:
        type: string
      decrypt_user_id:
        type: integer
      focus_area:
        type: string
      user_id:
        type: integer
    type: object
  model.PrivateDataResponse:
    properties:
      capsule:
        type: string
      cipher_text:
        type: string
      user_id:
        type: integer
    type: object
  model.PublicDataInputReq:
    properties:
      communities:
        type: string
      focus_area:
        type: string
      user_id:
        type: integer
    type: object
  model.PublicDataResponse:
    properties:
      communities:
        type: string
      focus_area:
        type: string
      user_id:
        type: integer
    type: object
  model.PvtDataResponse:
    properties:
      message:
        type: string
      privateData:
        items:
          $ref: '#/definitions/model.PrivateData'
        type: array
      status:
        type: boolean
    type: object
  model.SignUpRequest:
    properties:
      date_of_birth:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  model.SignUpResponse:
    properties:
      message:
        type: string
      status:
        type: boolean
      userID:
        type: integer
    type: object
info:
  contact: {}
paths:
  /addPrivateData:
    post:
      consumes:
      - application/json
      description: This endpoint is used to add Private Data
      parameters:
      - description: enter the details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.PrivateDataInputReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: add Private Data
  /addPublicData:
    post:
      consumes:
      - application/json
      description: This endpoint is used to add Public Data
      parameters:
      - description: enter details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.PublicDataInputReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AddPublicDataResponse'
      summary: add Public Data
  /getAllAccessDatabyID:
    get:
      consumes:
      - application/json
      description: Get rivate data that has been given access to a  ID
      parameters:
      - description: User's ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PrivateDataResponse'
            type: array
      summary: Return user private data that has been given access to a  ID
  /getAllPrivateDataByID:
    get:
      consumes:
      - application/json
      description: Get private data for a user by their ID
      parameters:
      - description: User's ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PrivateDataResponse'
      summary: Return user private data by ID
  /getAllPublicDataByID:
    get:
      consumes:
      - application/json
      description: Get public data for a user by their ID
      parameters:
      - description: User's ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PublicDataResponse'
      summary: Return user public data by ID
  /getDIDbyUserID:
    get:
      consumes:
      - application/json
      description: Get user DID when ID is given
      parameters:
      - description: User's ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Return user DID when ID is given
  /getPvtDatabyID:
    get:
      consumes:
      - application/json
      description: Get user DID when ID is given
      parameters:
      - description: User's ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PvtDataResponse'
      summary: Return user DID when ID is given
  /getUserIDbyDID:
    get:
      consumes:
      - application/json
      description: Get user id when DID is given
      parameters:
      - description: User's DID
        in: query
        name: did
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Return user id when DID is given
  /login:
    post:
      consumes:
      - application/json
      description: This endpoint is used to authenticate existing user log in
      parameters:
      - description: enter email and password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.LogInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LogInResponse'
      summary: Return user data
  /signup:
    post:
      consumes:
      - application/json
      description: This endpoint is used to when new user signs up
      parameters:
      - description: enter email and phone number
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SignUpResponse'
      summary: Return user data
swagger: "2.0"
