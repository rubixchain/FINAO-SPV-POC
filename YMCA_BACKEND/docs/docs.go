// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/getAllAccessDatabyDID": {
            "get": {
                "description": "Get rivate data that has been given access to a  DID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return user private data that has been given access to a  DID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's DID",
                        "name": "did",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PrivateDataResponse"
                            }
                        }
                    }
                }
            }
        },
        "/getAllPrivateDataByDID": {
            "get": {
                "description": "Get private data for a user by their DID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return user private data by DID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's DID",
                        "name": "did",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PrivateDataResponse"
                        }
                    }
                }
            }
        },
        "/getAllPublicDataByDID": {
            "get": {
                "description": "Get public data for a user by their DID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return user public data by DID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's DID",
                        "name": "did",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PublicDataResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "This endpoint is used to authenticate existing user log in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return user data",
                "parameters": [
                    {
                        "description": "enter email and password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LogInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LogInResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "This endpoint is used to when new user signs up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return user data",
                "parameters": [
                    {
                        "description": "enter email and phone number",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SignUpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.LogInRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.LogInResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "model.PrivateDataResponse": {
            "type": "object",
            "properties": {
                "capsule": {
                    "type": "string"
                },
                "cipher_text": {
                    "type": "string"
                },
                "did": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.PublicDataResponse": {
            "type": "object",
            "properties": {
                "communities": {
                    "type": "string"
                },
                "did": {
                    "type": "string"
                },
                "focus_area": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.SignUpRequest": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "model.SignUpResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "userID": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
